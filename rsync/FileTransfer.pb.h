// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FileTransfer.proto

#ifndef PROTOBUF_FileTransfer_2eproto__INCLUDED
#define PROTOBUF_FileTransfer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_FileTransfer_2eproto();
void protobuf_AssignDesc_FileTransfer_2eproto();
void protobuf_ShutdownFile_FileTransfer_2eproto();

class Init;
class Trunk;
class Resume;
class Pause;
class Stop;

// ===================================================================

class Init : public ::google::protobuf::Message {
 public:
  Init();
  virtual ~Init();

  Init(const Init& from);

  inline Init& operator=(const Init& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Init& default_instance();

  void Swap(Init* other);

  // implements Message ----------------------------------------------

  Init* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Init& from);
  void MergeFrom(const Init& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 trunkSize = 1;
  inline bool has_trunksize() const;
  inline void clear_trunksize();
  static const int kTrunkSizeFieldNumber = 1;
  inline ::google::protobuf::int32 trunksize() const;
  inline void set_trunksize(::google::protobuf::int32 value);

  // required int32 startIdx = 2;
  inline bool has_startidx() const;
  inline void clear_startidx();
  static const int kStartIdxFieldNumber = 2;
  inline ::google::protobuf::int32 startidx() const;
  inline void set_startidx(::google::protobuf::int32 value);

  // required string filename = 3;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 3;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // @@protoc_insertion_point(class_scope:Init)
 private:
  inline void set_has_trunksize();
  inline void clear_has_trunksize();
  inline void set_has_startidx();
  inline void clear_has_startidx();
  inline void set_has_filename();
  inline void clear_has_filename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 trunksize_;
  ::google::protobuf::int32 startidx_;
  ::std::string* filename_;
  friend void  protobuf_AddDesc_FileTransfer_2eproto();
  friend void protobuf_AssignDesc_FileTransfer_2eproto();
  friend void protobuf_ShutdownFile_FileTransfer_2eproto();

  void InitAsDefaultInstance();
  static Init* default_instance_;
};
// -------------------------------------------------------------------

class Trunk : public ::google::protobuf::Message {
 public:
  Trunk();
  virtual ~Trunk();

  Trunk(const Trunk& from);

  inline Trunk& operator=(const Trunk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Trunk& default_instance();

  void Swap(Trunk* other);

  // implements Message ----------------------------------------------

  Trunk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Trunk& from);
  void MergeFrom(const Trunk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Trunk)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_FileTransfer_2eproto();
  friend void protobuf_AssignDesc_FileTransfer_2eproto();
  friend void protobuf_ShutdownFile_FileTransfer_2eproto();

  void InitAsDefaultInstance();
  static Trunk* default_instance_;
};
// -------------------------------------------------------------------

class Resume : public ::google::protobuf::Message {
 public:
  Resume();
  virtual ~Resume();

  Resume(const Resume& from);

  inline Resume& operator=(const Resume& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Resume& default_instance();

  void Swap(Resume* other);

  // implements Message ----------------------------------------------

  Resume* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Resume& from);
  void MergeFrom(const Resume& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Resume)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_FileTransfer_2eproto();
  friend void protobuf_AssignDesc_FileTransfer_2eproto();
  friend void protobuf_ShutdownFile_FileTransfer_2eproto();

  void InitAsDefaultInstance();
  static Resume* default_instance_;
};
// -------------------------------------------------------------------

class Pause : public ::google::protobuf::Message {
 public:
  Pause();
  virtual ~Pause();

  Pause(const Pause& from);

  inline Pause& operator=(const Pause& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pause& default_instance();

  void Swap(Pause* other);

  // implements Message ----------------------------------------------

  Pause* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pause& from);
  void MergeFrom(const Pause& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pause)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_FileTransfer_2eproto();
  friend void protobuf_AssignDesc_FileTransfer_2eproto();
  friend void protobuf_ShutdownFile_FileTransfer_2eproto();

  void InitAsDefaultInstance();
  static Pause* default_instance_;
};
// -------------------------------------------------------------------

class Stop : public ::google::protobuf::Message {
 public:
  Stop();
  virtual ~Stop();

  Stop(const Stop& from);

  inline Stop& operator=(const Stop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stop& default_instance();

  void Swap(Stop* other);

  // implements Message ----------------------------------------------

  Stop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Stop& from);
  void MergeFrom(const Stop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Stop)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_FileTransfer_2eproto();
  friend void protobuf_AssignDesc_FileTransfer_2eproto();
  friend void protobuf_ShutdownFile_FileTransfer_2eproto();

  void InitAsDefaultInstance();
  static Stop* default_instance_;
};
// ===================================================================


// ===================================================================

// Init

// required int32 trunkSize = 1;
inline bool Init::has_trunksize() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Init::set_has_trunksize() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Init::clear_has_trunksize() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Init::clear_trunksize() {
  trunksize_ = 0;
  clear_has_trunksize();
}
inline ::google::protobuf::int32 Init::trunksize() const {
  // @@protoc_insertion_point(field_get:Init.trunkSize)
  return trunksize_;
}
inline void Init::set_trunksize(::google::protobuf::int32 value) {
  set_has_trunksize();
  trunksize_ = value;
  // @@protoc_insertion_point(field_set:Init.trunkSize)
}

// required int32 startIdx = 2;
inline bool Init::has_startidx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Init::set_has_startidx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Init::clear_has_startidx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Init::clear_startidx() {
  startidx_ = 0;
  clear_has_startidx();
}
inline ::google::protobuf::int32 Init::startidx() const {
  // @@protoc_insertion_point(field_get:Init.startIdx)
  return startidx_;
}
inline void Init::set_startidx(::google::protobuf::int32 value) {
  set_has_startidx();
  startidx_ = value;
  // @@protoc_insertion_point(field_set:Init.startIdx)
}

// required string filename = 3;
inline bool Init::has_filename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Init::set_has_filename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Init::clear_has_filename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Init::clear_filename() {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& Init::filename() const {
  // @@protoc_insertion_point(field_get:Init.filename)
  return *filename_;
}
inline void Init::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set:Init.filename)
}
inline void Init::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set_char:Init.filename)
}
inline void Init::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Init.filename)
}
inline ::std::string* Init::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Init.filename)
  return filename_;
}
inline ::std::string* Init::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Init::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Init.filename)
}

// -------------------------------------------------------------------

// Trunk

// required bytes data = 1;
inline bool Trunk::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Trunk::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Trunk::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Trunk::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& Trunk::data() const {
  // @@protoc_insertion_point(field_get:Trunk.data)
  return *data_;
}
inline void Trunk::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Trunk.data)
}
inline void Trunk::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Trunk.data)
}
inline void Trunk::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Trunk.data)
}
inline ::std::string* Trunk::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Trunk.data)
  return data_;
}
inline ::std::string* Trunk::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Trunk::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Trunk.data)
}

// -------------------------------------------------------------------

// Resume

// -------------------------------------------------------------------

// Pause

// -------------------------------------------------------------------

// Stop


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FileTransfer_2eproto__INCLUDED
